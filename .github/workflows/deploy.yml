name: Build, Publish, and Deploy
on:
  push:
    branches:
      - main
      - 'release/**'
  workflow_dispatch:
permissions:
  contents: read
  packages: write
jobs:
  build_and_publish:
    outputs:
      image_repo: ${{ steps.image_meta.outputs.image_repo }}
    runs-on: [self-hosted, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GHCR
        env:
          CR_USER: ${{ github.repository_owner }}
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$CR_PAT" | docker login ghcr.io -u "$CR_USER" --password-stdin
      - name: Build image
        env:
          IMAGE_REPO_UPPER: ghcr.io/${{ github.repository_owner }}/binance-consumer
        run: |
          IMAGE_REPO=$(echo "$IMAGE_REPO_UPPER" | tr '[:upper:]' '[:lower:]')
          docker build -f deploy/dockerfile -t "$IMAGE_REPO":${{ github.sha }} .
          echo "IMAGE_REPO=$IMAGE_REPO" >> $GITHUB_ENV
      - name: Export image repo output
        id: image_meta
        run: |
          echo "image_repo=$IMAGE_REPO" >> $GITHUB_OUTPUT
      - name: Push image
        run: |
          docker push "$IMAGE_REPO":${{ github.sha }}
  deploy:
    needs: build_and_publish
    runs-on: [self-hosted, prod]
    steps:
      - name: Deploy to Kubernetes (prod)
        uses: ./.github/actions/deploy
        with:
          env: prod
          namespace: quantlytic-prod
          image_repo: ${{ needs.build_and_publish.outputs.image_repo }}
          tag: ${{ github.sha }}
          kafka_brokers: ${{ secrets.KAFKA_BROKERS }}
          kafka_topic: ${{ secrets.KAFKA_TOPIC }}
          kafka_client_id: ${{ secrets.KAFKA_CLIENT_ID }}
